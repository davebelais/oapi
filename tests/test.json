{
  "schemas": {
    "Activities": {
      "properties": {
        "count": {
          "description": "Total number of items available.",
          "format": "int32",
          "type": "integer"
        },
        "history": {
          "items": {
            "$ref": "#/components/schemas/Activity"
          },
          "type": "array"
        },
        "limit": {
          "description": "Number of items to retrieve (100 max).",
          "format": "int32",
          "type": "integer"
        },
        "offset": {
          "description": "Position in pagination.",
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Activity": {
      "properties": {
        "uuid": {
          "description": "Unique identifier for the activity",
          "type": "string"
        }
      }
    },
    "Error": {
      "properties": {
        "code": {
          "type": "string"
        },
        "fields": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "PriceEstimate": {
      "properties": {
        "currency_code": {
          "description": "[ISO 4217](http://en.wikipedia.org/wiki/ISO_4217) currency code.",
          "type": "string"
        },
        "display_name": {
          "description": "Display name of product.",
          "type": "string"
        },
        "estimate": {
          "description": "Formatted string of estimate in local currency of the start location. Estimate could be a range, a single number (flat rate) or \"Metered\" for TAXI.",
          "type": "string"
        },
        "high_estimate": {
          "description": "Upper bound of the estimated price.",
          "type": "number"
        },
        "low_estimate": {
          "description": "Lower bound of the estimated price.",
          "type": "number"
        },
        "product_id": {
          "description": "Unique identifier representing a specific product for a given latitude & longitude. For example, uberX in San Francisco will have a different product_id than uberX in Los Angeles",
          "type": "string"
        },
        "surge_multiplier": {
          "description": "Expected surge multiplier. Surge is active if surge_multiplier is greater than 1. Price estimate already factors in the surge multiplier.",
          "type": "number"
        }
      }
    },
    "Product": {
      "properties": {
        "capacity": {
          "description": "Capacity of product. For example, 4 people.",
          "type": "integer"
        },
        "description": {
          "description": "Description of product.",
          "type": "string"
        },
        "display_name": {
          "description": "Display name of product.",
          "type": "string"
        },
        "image": {
          "description": "Image URL representing the product.",
          "type": "string"
        },
        "product_id": {
          "description": "Unique identifier representing a specific product for a given latitude & longitude. For example, uberX in San Francisco will have a different product_id than uberX in Los Angeles.",
          "type": "string"
        }
      }
    },
    "ProductList": {
      "properties": {
        "products": {
          "description": "Contains the list of products",
          "items": {
            "$ref": "#/components/schemas/Product"
          },
          "type": "array"
        }
      }
    },
    "Profile": {
      "properties": {
        "email": {
          "description": "Email address of the Uber user",
          "type": "string"
        },
        "first_name": {
          "description": "First name of the Uber user.",
          "type": "string"
        },
        "last_name": {
          "description": "Last name of the Uber user.",
          "type": "string"
        },
        "picture": {
          "description": "Image URL of the Uber user.",
          "type": "string"
        },
        "promo_code": {
          "description": "Promo code of the Uber user.",
          "type": "string"
        }
      }
    }
  },
  "securitySchemes": {
    "apikey": {
      "in": "query",
      "name": "server_token",
      "type": "apiKey"
    }
  }
}